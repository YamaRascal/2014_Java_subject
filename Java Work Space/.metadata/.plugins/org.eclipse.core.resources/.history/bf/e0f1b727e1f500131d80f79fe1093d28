package tintirorin;

import java.util.Scanner;
public class Process {
	Scanner scan = new Scanner(System.in);
	int num =3;					//サイコロの数
	int menberNum;				//参加人数
	int []dice = new int[3];	//プレイヤーのサイコロの出目

	Process(int a){	//コンストラクタで参加人数の代入
		menberNum = a;
	}


	public void playerscan(String[][] playerName) {
		// TODO Auto-generated method stub
		//////////////////////////////////////////////////////////////////////プレイヤー情報の入力//

		for(int i=0;i < menberNum;i++){		//プレイヤーの名前を入力するfor文
			if(i==0){
				System.out.print("親になる人の名前を入力してください>");	////////////////配列０番が親
				playerName[i][0] = scan.next();
				String x ="親の";
				playerName[i][0] =x+playerName[i][0];
			}else{
				System.out.print("子の名前を入力してください>");		////////////////子の名前の入力
				playerName[i][0] = scan.next();}
		}
	}

	public  void dicedata(int[][] mydice,int i){	//////////////////////サイコロをふる処理（ふった値をメインに返す）
		for(int j=0;j<3;j++){
			mydice[i][j] = (int)(Math.random()*6)+1;	//サイコロで１〜６の目を出す
		}
		//showDate();					//代入終了後にデータの表示、メソッドの呼び出し
	}

	public void showDate(int[][]mydice,int i){				//サイコロの値の表示
		for(int j=0;j<num;j++){
			System.out.print(mydice[i][j]+(j!=num-1?"　・　":""));
		}
		System.out.println();
		//System.out.print("よって");
	}
	public void masterOutcome(String[][] playerName,int[][]mydice,boolean[][] res,int i){		//親の
		res[0][0]=false;
		res[0][1]=false;
		role_deme(playerName,mydice,i,res);
		//////////////////////////////////////////////////////////////親の役の処理
		if(mydice[0][0]==4||mydice[0][1]==4||mydice[0][2]==4){
			if(mydice[0][0]==5||mydice[0][1]==5||mydice[0][2]==5){
				if(mydice[0][0]==6||mydice[0][1]==6||mydice[0][2]==6){
					//親が４５６だから即刻、親の勝ち[親が勝ちの処理を入力]
					res[0][0]=true;
					playerName[0][1]="役４５６";
				}
			}
		}else
			if(mydice[0][0]==1||mydice[0][1]==1||mydice[0][2]==1){
				if(mydice[0][0]==2||mydice[0][1]==2||mydice[0][2]==2){
					if(mydice[0][0]==3||mydice[0][1]==3||mydice[0][2]==3){
						//親が１２３だから、親の即負け[親が負けの処理を入力]
						res[0][1]=true;
						playerName[0][1]="役１２３";
					}
				}
			}
		//////////////////////////////////////////////////////////////親の値の処理
	
	}

	public void playerDate(int[][]mydice,int i,boolean[][] res){
		
		//////////////////////////////////////////////////////////////子の値の処理
		standardDiceJudge(mydice,i,res);
		DiceJudgeSYONBEN(mydice,i,res);
		Arashi(mydice,i,res);

	}
	public void standardDiceJudge(int[][]mydice,int i,boolean[][] res){				//サイコロの値の入れ替え（０番をチンチロリンの値に）
		int es;
	
			if(mydice[i][0]==mydice[i][1]){
				es=mydice[i][0];
				mydice[i][0]=mydice[i][2];
				mydice[i][2]=es;
				res[i][2]=true;
			}
			if(mydice[i][0]==mydice[i][2]){
				es=mydice[i][0];
				mydice[i][0]=mydice[i][1];
				mydice[i][1]=es;
				res[i][2]=true;
			}
			if(mydice[i][1]==mydice[i][2]){
				//00に00を入れる処理になるので書かなくていい
				res[i][2]=true;
			}
		}
	
	
	public void DiceJudgeSYONBEN(int[][]mydice,int i,boolean[][] res){			//ションベン
		//////////////////////////////////////////////////////////////////////目無しによる負け
		if(mydice[i][0]!=mydice[i][1] 
				&& mydice[i][0]!=mydice[i][2] 
						&& mydice[i][1]!=mydice[i][2]){	//全てのサイコロの目が違ったら目がないので負け
			res[i][2]=false;
		}
	}
	
	public void Arashi(int[][]mydice,int i,boolean[][] res){					//アラシ(子の時だけ)
		if(mydice[i][0]==mydice[i][1] 
				&& mydice[i][0]==mydice[i][2] 
						&& mydice[i][1]==mydice[i][2]){
			res[i][3]=true;
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////役の判定
	public void role_deme(String[][] playerName,int[][]mydice,int i,boolean[][] res){
		standardDiceJudge(mydice,i,res);
		DiceJudgeSYONBEN(mydice,i,res);
		Arashi(mydice,i,res);
		
		if(res[i][3]==true){
			playerName[i][1]="アラシ役";
		}
		if(res[i][2]==true){
			playerName[i][1]="数字役";
		}
		if(res[i][2]==false){
			playerName[i][1]="しょんべん役";
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////データの判定　勝敗
	public int victory_decision(String[][] playerName,int[][]mydice,int i,boolean[][] res){
		//////////////////////////////////////////////////////////////////////////////////////////ションベン判定
		if(res[i][2]==false){
			return 1;	//子がションベンのため親の勝ち
		}
		//////////////////////////////////////////////////////////////////////////////////////////

		/////////////////////////////////////////////////////////////////////////////////////////アラシ役の勝敗、判定
		if(playerName[0][1]=="アラシ役"){				/////親がアラシだった場合
			if(playerName[0][1]=="アラシ役"){			////子供もアラシなら
				if(mydice[0][0]>mydice[i][0]){			////サイコロデータの[0]番はデータ処理のときに使えるデータに入れ替えられている
					return 1;	//アラシ役vsアラシ役のため、数値対決
				}else 
					if(mydice[0][0]==mydice[i][0]){
						return 3;	//数値一緒のため引き分け
				}else{
					return 2;	//子の勝ち
					}
			}else{
				return 1;	//親がアラシ役で子がアラシじゃない、よって親の勝ち
			}
		}
		else if(playerName[0][1]=="アラシ役"){
			return 2;	//親がアラシ役じゃなくて、子だけがアラシ役、よって子の勝ち
		}
		////////////////////////////////////////////////////////////////////////////////////////////////ここまでアラシ役
		
		//////////////////////////////////////////////////////////////////////////////////////////数値対決
		if(mydice[0][0]>mydice[i][0]){
			return 1;
		}else 
			if(mydice[0][0]==mydice[i][0]){
				return 3;	//数値一緒のため引き分け
		}else{
			return 2;	//子の勝ち
			}
		//////////////////////////////////////////////////////////////////////////////////////////
		
	}
	
	public void master_win(String[][] playerName,int[][]mydice,int i,boolean[][] res){
		System.out.println(playerName[0][0]+"の\n"
							+mydice[0][0]+"・"+mydice[0][1]+"・"+mydice[0][2]+"の"+playerName[0][1]+(res[0][2]==false?"":mydice[0][0])+"\n\n対\n\n"
									+mydice[i][0]+"・"+mydice[i][1]+"・"+mydice[i][2]+"の"+playerName[i][1]+(res[i][2]==false?"":mydice[i][0])+
									"よって"+playerName[0][0]+"の勝ち");
	}
	public void player_win(String[][] playerName,int[][]mydice,int i,boolean[][] res){
		System.out.println(playerName[0][0]+"の\n"
								+mydice[0][0]+"・"+mydice[0][1]+"・"+mydice[0][2]+"の"+playerName[0][1]+(res[0][2]==false?"":mydice[0][0])+"\n\n対\n\n"
									+mydice[i][0]+"・"+mydice[i][1]+"・"+mydice[i][2]+"の"+playerName[i][1]+(res[i][2]==false?"":mydice[i][0])+
									"よって"+playerName[i][0]+"の勝ち");
	}
	public void drow(String[][] playerName,int[][]mydice,int i,boolean[][] res){
		System.out.println(playerName[0][0]+"の\n"
								+mydice[0][0]+"・"+mydice[0][1]+"・"+mydice[0][2]+"の"+playerName[0][1]+(res[0][2]==false?"":mydice[0][0])+"\n\n対\n\n"
									+mydice[i][0]+"・"+mydice[i][1]+"・"+mydice[i][2]+"の"+playerName[i][1]+(res[i][2]==false?"":mydice[i][0])+
									"よって"+"引き分け");
	}



}
